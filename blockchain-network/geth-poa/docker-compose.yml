# version: '3'
x-common-commands:
  node_entrypoint: &node_entrypoint >
    bash -c "
    ./start_node.sh
    "
services:
  bootnode:
    image: geth-node:poa
    container_name: bootnode
    hostname: bootnode
    environment:
      - IDENTITY=bootnode
      - BOOTNODE_IP=${BOOTNODE_IP}
      - BOOTNODE_PORT=${BOOTNODE_PORT}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${BOOTNODE_IP}
    restart: always

  node1:
    image: geth-node:poa
    container_name: node1
    hostname: node1
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node1
      - ETHERBASE=${ETHERBASE_NODE_1}
      - IP_ADDR=${IP_NODE_1}
      - WS_PORT=${WS_PORT_NODE_1}
      - RPC_PORT=${RPC_PORT_NODE_1}
      - ETH_PORT=${ETH_PORT_NODE_1}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_1}
    restart: always

  node2:
    image: geth-node:poa
    container_name: node2
    hostname: node2
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node2
      - ETHERBASE=${ETHERBASE_NODE_2}
      - IP_ADDR=${IP_NODE_2}
      - WS_PORT=${WS_PORT_NODE_2}
      - RPC_PORT=${RPC_PORT_NODE_2}
      - ETH_PORT=${ETH_PORT_NODE_2}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_2}
    restart: always

  node3:
    image: geth-node:poa
    container_name: node3
    hostname: node3
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node3
      - ETHERBASE=${ETHERBASE_NODE_3}
      - IP_ADDR=${IP_NODE_3}
      - WS_PORT=${WS_PORT_NODE_3}
      - RPC_PORT=${RPC_PORT_NODE_3}
      - ETH_PORT=${ETH_PORT_NODE_3}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_3}
    restart: always

  node4:
    image: geth-node:poa
    container_name: node4
    hostname: node4
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node4
      - ETHERBASE=${ETHERBASE_NODE_4}
      - IP_ADDR=${IP_NODE_4}
      - WS_PORT=${WS_PORT_NODE_4}
      - RPC_PORT=${RPC_PORT_NODE_4}
      - ETH_PORT=${ETH_PORT_NODE_4}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_4}
    restart: always

  node5:
    image: geth-node:poa
    container_name: node5
    hostname: node5
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node5
      - ETHERBASE=${ETHERBASE_NODE_5}
      - IP_ADDR=${IP_NODE_5}
      - WS_PORT=${WS_PORT_NODE_5}
      - RPC_PORT=${RPC_PORT_NODE_5}
      - ETH_PORT=${ETH_PORT_NODE_5}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_5}
    restart: always

  node6:
    image: geth-node:poa
    container_name: node6
    hostname: node6
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node6
      - ETHERBASE=${ETHERBASE_NODE_6}
      - IP_ADDR=${IP_NODE_6}
      - WS_PORT=${WS_PORT_NODE_6}
      - RPC_PORT=${RPC_PORT_NODE_6}
      - ETH_PORT=${ETH_PORT_NODE_6}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_6}
    restart: always

  node7:
    image: geth-node:poa
    container_name: node7
    hostname: node7
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node7
      - ETHERBASE=${ETHERBASE_NODE_7}
      - IP_ADDR=${IP_NODE_7}
      - WS_PORT=${WS_PORT_NODE_7}
      - RPC_PORT=${RPC_PORT_NODE_7}
      - ETH_PORT=${ETH_PORT_NODE_7}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_7}
    restart: always

  node8:
    image: geth-node:poa
    container_name: node8
    hostname: node8
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node8
      - ETHERBASE=${ETHERBASE_NODE_8}
      - IP_ADDR=${IP_NODE_8}
      - WS_PORT=${WS_PORT_NODE_8}
      - RPC_PORT=${RPC_PORT_NODE_8}
      - ETH_PORT=${ETH_PORT_NODE_8}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_8}
    restart: always

  node9:
    image: geth-node:poa
    container_name: node9
    hostname: node9
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node9
      - ETHERBASE=${ETHERBASE_NODE_9}
      - IP_ADDR=${IP_NODE_9}
      - WS_PORT=${WS_PORT_NODE_9}
      - RPC_PORT=${RPC_PORT_NODE_9}
      - ETH_PORT=${ETH_PORT_NODE_9}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_9}
    restart: always

  node10:
    image: geth-node:poa
    container_name: node10
    hostname: node10
    depends_on:
      - bootnode
    environment:
      - IDENTITY=node10
      - ETHERBASE=${ETHERBASE_NODE_10}
      - IP_ADDR=${IP_NODE_10}
      - WS_PORT=${WS_PORT_NODE_10}
      - RPC_PORT=${RPC_PORT_NODE_10}
      - ETH_PORT=${ETH_PORT_NODE_10}
      - BOOTNODE_URL=${BOOTNODE_URL}
      - NETWORK_ID=${NETWORK_ID}
      - WS_SECRET=${WS_SECRET}
      - ETH_NETSATS_IP=${ETH_NETSATS_IP}
      - ETH_NETSATS_PORT=${ETH_NETSATS_PORT}
      - RPC_PROTOCOL=${RPC_PROTOCOL}
    command: *node_entrypoint
    volumes:
      - "./config:/src/"
    networks:
      blockchain_network:
        ipv4_address: ${IP_NODE_10}
    restart: always

  eth-netstats:
    image: eth-netstats
    container_name: eth-netstats
    depends_on:
      - node1
    ports:
      - "${ETH_NETSATS_PORT}:${ETH_NETSATS_PORT}"
    networks:
      blockchain_network:
        ipv4_address: ${ETH_NETSATS_IP}
    restart: always

networks:
  blockchain_network:
    name: blockchain_network
    ipam:
      driver: default
      config:
        - subnet: ${BLOCKCHAIN_SUBNET}
